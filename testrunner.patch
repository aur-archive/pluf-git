diff --git a/src/testrunner.php b/src/testrunner.php
index 281ba36..fa75328 100644
--- a/src/testrunner.php
+++ b/src/testrunner.php
@@ -64,73 +64,108 @@ function getTestFiles($dir='')
     }
     return $res;
 }
-if (PHP_SAPI == 'cli') {
+
+if ((PHP_SAPI == 'cli') and (realpath($_SERVER['PHP_SELF']) == __FILE__))
+{
     // Get the application and then the configuration file
     if ($argc < 2) {
         usage($argv[0]);
         exit(1);
     }
     $app = $argv[1];
+    $config = null;
     if ($argc >= 3) {
         $config = $argv[2];
-    } else {
-        $config = $app.'/conf/'.strtolower($app).'.test.php';
     }
-} else {
-    echo('Error: This script can only be run from the command line.'."\n");
-    exit(1);
+    echo(sprintf('Application: %s ', $app));
+    run_tests( $app, $config );
 }
-echo(sprintf('Application: %s ', $app));
-if (!file_exists($config)) {
-    echo(sprintf("\n".'Error, the config file does not exists: %s'."\n", $config));
-    exit(1);
-} else {
-    echo(sprintf('(%s)'."\n", $config));
-}
-define('IN_UNIT_TESTS', true);
-require 'Pluf.php';
-Pluf::start($config);
 
-$simple_test = Pluf::f('simple_test_path', false);
-if (false == $simple_test) {
-    e('Error, the path to the simple test framework is not defined.');
-    e('Download simple test from:');
-    e('   http://simpletest.sourceforge.net/');
-    e('Extract the archive on your system and set the "simple_test_path"');
-    e('configuration variable in your configuration file.');
-    e('For example: $cfg[\'simple_test_path\'] = \'/home/you/simpletest\'; ');
-    exit(1);
-}
-$testfolder = $app.'/Tests/';
-if (!file_exists($testfolder)) {
-    e(sprintf('The test folder does not exists: %s.', $app.'/Tests/'));
-    exit(1);
-}
-
-define('SIMPLE_TEST', $simple_test.'/');
-require_once(SIMPLE_TEST.'unit_tester.php');
-require_once(SIMPLE_TEST.'reporter.php');
+function run_tests( $app, $config=null )
+{
+  if ($config == null) {
+    if ($app == null) {
+      usage();
+      exit(1);
+    }
+    $config = $app.'/conf/'.strtolower($app).'.test.php';
+  }
+/*
+  else {
+    if ($config == null) {
+      usage();
+      exit(1);
+    } else {
+      $app = strip( basename($config), '.' );
+      $app = $app[0]; // get 1st string from array
+      $app[0] = strtoupper( app[0] ); // make 1st letter big
+    }
+  }
+*/
 
-$files = getTestFiles($testfolder);
-$dirs = getTestDirs($testfolder);
-foreach ($dirs as $dir) {
-    foreach (getTestFiles($dir) as $test) {
-        $files[] = $test;
+  if (!file_exists($config)) {
+      echo(sprintf("\n".'Error, the config file does not exists: %s'."\n", $config));
+      exit(1);
+  } else {
+    if (PHP_SAPI == 'cli') {
+      echo(sprintf('(%s)'."\n", $config));
     }
-}
-$test = &new GroupTest(sprintf('All tests for application %s.', $app));
-foreach ($files as $t) {
-    $test->addTestCase(new $t[1]());
-}
-$reporter = new TextReporter(); 
-$mig = new Pluf_Migration(null);
-$mig->display = false;
-$mig->install();
-// If available, load an initialisation file.
-if (file_exists($app.'/Tests/init.json')) {
-    $created = Pluf_Test_Fixture::loadFile($app.'/Tests/init.json');
-} else {
-    $created = array();
-}
-$test->run($reporter);
-$mig->unInstall();
\ No newline at end of file
+  }
+
+  define('IN_UNIT_TESTS', true);
+  require 'Pluf.php';
+  Pluf::start($config);
+
+  $simple_test = Pluf::f('simple_test_path', false);
+  if (false == $simple_test) {
+      e('Error, the path to the simple test framework is not defined.');
+      e('Download simple test from:');
+      e('   http://simpletest.sourceforge.net/');
+      e('Extract the archive on your system and set the "simple_test_path"');
+      e('configuration variable in your configuration file.');
+      e('For example: $cfg[\'simple_test_path\'] = \'/home/you/simpletest\'; ');
+      exit(1);
+  }
+
+  $count = strlen($app) +5; // +5 means '/conf'
+  $wdir = substr(dirname($config), 0, -$count);
+  @chdir( $wdir );
+
+  $testfolder = $app.'/Tests/';
+  if (!file_exists($testfolder)) {
+      e(sprintf('The test folder does not exists: %s.', $app.'/Tests/'));
+      exit(1);
+  }
+
+  define('SIMPLE_TEST', $simple_test.'/');
+  require_once(SIMPLE_TEST.'unit_tester.php');
+  require_once(SIMPLE_TEST.'reporter.php');
+
+  $files = getTestFiles($testfolder);
+  $dirs = getTestDirs($testfolder);
+  foreach ($dirs as $dir) {
+      foreach (getTestFiles($dir) as $test) {
+          $files[] = $test;
+      }
+  }
+  $test = &new GroupTest(sprintf('All tests for application %s.', $app));
+  foreach ($files as $t) {
+      $test->addTestCase(new $t[1]());
+  }
+  if (PHP_SAPI == 'cli') {
+    $reporter = new TextReporter();
+  } else {
+    $reporter = new HtmlReporter();
+  }
+  $mig = new Pluf_Migration(null);
+  $mig->display = false;
+  $mig->install();
+  // If available, load an initialisation file.
+  if (file_exists($app.'/Tests/init.json')) {
+      $created = Pluf_Test_Fixture::loadFile($app.'/Tests/init.json');
+  } else {
+      $created = array();
+  }
+  $test->run($reporter);
+  $mig->unInstall();
+} // end run()
diff --git a/src/web-test.php b/src/web-test.php
new file mode 100644
index 0000000..dd11579
--- /dev/null
+++ b/src/web-test.php
@@ -0,0 +1,5 @@
+<?php
+  require 'testrunner.php';
+  run_tests( "Pluf" );
+  #run_tests( "Pluf", "Pluf/conf/pluf.test.php" );
+?>
